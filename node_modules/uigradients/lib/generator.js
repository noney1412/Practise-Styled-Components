'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _templateObject = _taggedTemplateLiteral(['background-image: -webkit-radial-gradient(\n  ', ' ', ' at ', ',\n  ', ' ', ',\n  ', ' ', ');\nbackground-image: -moz-radial-gradient(\n  ', ' ', ' at ', ',\n  ', ' ', ',\n  ', ' ', ');\nbackground-image: -o-radial-gradient(\n  ', ' ', ' at ', ',\n  ', ' ', ',\n  ', ' ', ');\nbackground-image: radial-gradient(\n  ', ' ', ' at ', ',\n  ', ' ', ',\n  ', ' ', ');'], ['background-image: -webkit-radial-gradient(\n  ', ' ', ' at ', ',\n  ', ' ', ',\n  ', ' ', ');\nbackground-image: -moz-radial-gradient(\n  ', ' ', ' at ', ',\n  ', ' ', ',\n  ', ' ', ');\nbackground-image: -o-radial-gradient(\n  ', ' ', ' at ', ',\n  ', ' ', ',\n  ', ' ', ');\nbackground-image: radial-gradient(\n  ', ' ', ' at ', ',\n  ', ' ', ',\n  ', ' ', ');']),
    _templateObject2 = _taggedTemplateLiteral(['background-color: ', ';\nbackground-image: -webkit-linear-gradient(\n  ', 'deg,\n  ', ',\n  ', ');\nbackground-image: -moz-linear-gradient(\n  ', 'deg,\n  ', ',,\n  ', ');\nbackground-image: -o-linear-gradient(\n  ', 'deg,\n  ', ',,\n  ', ');\nbackground-image: linear-gradient(\n  ', 'deg,\n  ', ',\n  ', ');'], ['background-color: ', ';\nbackground-image: -webkit-linear-gradient(\n  ', 'deg,\n  ', ',\n  ', ');\nbackground-image: -moz-linear-gradient(\n  ', 'deg,\n  ', ',,\n  ', ');\nbackground-image: -o-linear-gradient(\n  ', 'deg,\n  ', ',,\n  ', ');\nbackground-image: linear-gradient(\n  ', 'deg,\n  ', ',\n  ', ');']);

var _styledComponents = require('styled-components');

var _gradients = require('./gradients');

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function generateRadialGradientCss(options, gradientColors) {
  var shape = options.shape,
      position = options.position,
      extent = options.extent,
      colorStops = options.colorStops;

  return (0, _styledComponents.css)(_templateObject, shape, extent, position, gradientColors[0], colorStops[0], gradientColors[1], colorStops[1], shape, extent, position, gradientColors[0], colorStops[0], gradientColors[1], colorStops[1], shape, extent, position, gradientColors[0], colorStops[0], gradientColors[1], colorStops[1], shape, extent, position, gradientColors[0], colorStops[0], gradientColors[1], colorStops[1]);
}

function configRadialGradientOptions() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var position = options.position,
      shape = options.shape,
      colorStops = options.colorStops,
      extent = options.extent;

  var radialConfig = {};
  if (position) {
    radialConfig.position = position;
  } else {
    radialConfig.position = 'center';
  }
  if (shape && (shape === 'circle' || shape === 'ellipse')) {
    radialConfig.shape = shape;
  } else {
    radialConfig.shape = 'circle';
  }
  if (Array.isArray(colorStops)) {
    radialConfig.colorStops = colorStops;
  } else {
    radialConfig.colorStops = ['', ''];
  }
  if (extent === 'closest-side' || extent === 'closest-corner' || extent === 'farthest-side' || extent === 'farthest-corner') {
    radialConfig.extent = extent;
  } else {
    radialConfig.extent = '';
  }
  return radialConfig;
}

function generator() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var gradient = '';
  var angle = -90;
  if (props.gradient === undefined) {
    gradient = (0, _gradients.randomGradientName)();
  } else {
    gradient = props.gradient;
  }
  if (props.angle !== undefined) {
    angle = props.angle;
  }
  var type = props.type,
      options = props.options;

  if (type === 'radial') {
    var config = configRadialGradientOptions(options);
    return generateRadialGradientCss(config, _gradients.gradients[gradient]);
  }
  return (0, _styledComponents.css)(_templateObject2, _gradients.gradients[gradient][0], angle, _gradients.gradients[gradient][0], _gradients.gradients[gradient][1], angle, _gradients.gradients[gradient][0], _gradients.gradients[gradient][1], angle, _gradients.gradients[gradient][0], _gradients.gradients[gradient][1], angle, _gradients.gradients[gradient][0], _gradients.gradients[gradient][1]);
}

exports.default = generator;